---
    - file: path=/etc/flannel state=directory
    - file: path=/etc/systemd/system/flanneld.service.d state=directory
    - file: path=/etc/systemd/system/docker.service.d state=directory
    - file: path=/etc/kubernetes/manifests state=directory
    - name: install options.env 
      template: 
        src=options.env dest=/etc/flannel
      notify: daemon-reload
    - name: install 40-ExecStartPre-symlink.conf
      copy: 
        src=40-ExecStartPre-symlink.conf dest=/etc/systemd/system/flanneld.service.d/
      notify: daemon-reload
    - name: install 40-flannel.conf
      copy: 
        src=40-flannel.conf dest=/etc/systemd/system/docker.service.d/
      notify: daemon-reload
    - name: create kubelet unit
      template:
         src=kubelet.service dest=/etc/systemd/system/
    - name: config kube-apiserver
      template: src=kube-apiserver.yaml dest=/etc/kubernetes/manifests/kube-apiserver.yaml
    - name: config kube-proxy
      template: src=kube-proxy.yaml dest=/etc/kubernetes/manifests/
    - name: config kube-controller-manager
      template: src=kube-controller-manager.yaml dest=/etc/kubernetes/manifests/
    - name: config kube-scheduler.yaml
      template: src=kube-scheduler.yaml dest=/etc/kubernetes/manifests/
    - name: Daemon-reload
      command: systemctl daemon-reload
    - name: Configure flannel Network
      command: curl -X PUT -d "value={\"Network\":\"{{POD_NETWORK}}\",\"Backend\":{\"Type\":\"vxlan\"}}" "{{ETCD_SERVER}}/v2/keys/coreos.com/network/config"
    - name: ensure flanneld is running
      service: name=flanneld state=started
    - name: Ensure flanneld will start after boot
      service: name=flanneld enabled=yes
    - name: ensure docker is running
      service: name=docker state=started
    - name: Starting kubelet service
      service: name=kubelet state=started
    - name: Ensure kubelet will start after boot
      service: name=kubelet enabled=yes
    - name: Waiting for API to start (stay patient - pulling images)
      wait_for: host=127.0.0.1 port=8080
